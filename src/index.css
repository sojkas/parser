@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  --npadding: 1rem;
  --bpadding: 1.5rem;
  --dnpadding: 2rem;
  --xbpadding:3.5rem;
  --spadding: 0.5rem;
  --xspadding: 0.25rem;
  --iconsizex: 24px;
  --iconsizey: 24px;
  --animation-duration: 300ms;
  margin: 0;
  color: #2c2e2f;
  font-size: 16px;
  line-height: 150%;
}

/* General */

.note {
  @apply text-xs
  py-1;
}

.input-window__form {
  @apply flex
  flex-col;
}

.input-window__actions {
  @apply flex
  flex-row
  justify-center;
}

/* TextInput */
:focus-visible {
  @apply outline-none;
}

.text-input {
  @apply flex
  flex-col
  my-[1rem]
  w-[45vw];
}

.text-input__part {
  @apply relative
  h-[3rem];
}

.text-input__input {
  @apply p-[calc(var(--npadding))]
  rounded
  border
  border-[#444D56]
  box-border
  absolute
  w-full
  h-full
  top-0
  left-0;
}

.text-input__input:not(:placeholder-shown) {
  @apply px-[calc(var(--npadding)+1px)]
    pt-[calc(var(--bpadding)+1px)]
    pb-[calc(var(--spadding)+1px)];
}

.text-input__inputng:not(:placeholder-shown):focus {
  @apply px-[calc(var(--npadding))]
    pt-[calc(var(--bpadding))]
    pb-[calc(var(--spadding))];
}

.text-input__input::placeholder {
  @apply text-placeholderColor
  absolute
  top-[calc(var(--npadding)-1px)]
  left-[calc(var(--npadding)-1px)]
  ;
  transition: color 0ms var(--animation-duration), top 0ms var(--animation-duration), left 0ms var(--animation-duration);
}

.text-input__input:focus::placeholder {
  @apply top-[calc(var(--npadding)-1px)]
  left-[calc(var(--npadding)-1px)];
  color: transparent;
  transition: color 0ms 0ms, top 0ms 0ms, left 0ms 0ms;
}

.text-input__input:focus {
  @apply focus:border-2
    focus:rounded
  focus:border-mainBlue
    focus:px-[calc(var(--npadding)-1px)]
    focus:pt-[calc(var(--bpadding))]
    focus:pb-[calc(var(--spadding))];
}

.label {
  @apply mx-0
  mt-1
  mb-0 
  text-left
  absolute
  top-[calc(var(--npadding)-7px)]
  left-[calc(var(--npadding))]
  z-10
  opacity-0
  pointer-events-none;
  /* animation: labelAnimationDown var(--animation-duration);
  transition: opacity 0ms var(--animation-duration); */
  
  transition: top var(--animation-duration) ease-in, font-size var(--animation-duration) ease-in, opacity 0ms var(--animation-duration);
 
}

.text-input__input:focus + .label {
  @apply top-[calc(var(--xspadding))]
  left-[calc(var(--npadding))]
  text-xs
  opacity-100;
  transition: top var(--animation-duration) ease-in, font-size var(--animation-duration) ease-in, opacity 0s;
  /* animation: labelAnimationUp var(--animation-duration);
  transition: opacity 0s; */
}

.text-input__input:not(:placeholder-shown) + .label {
  @apply top-[calc(var(--xspadding))]
  left-[calc(var(--npadding))]
  text-xs
  opacity-100;
}

@keyframes labelAnimationUp{
  0% {
    @apply top-[calc(var(--npadding)-7px)]
    left-[calc(var(--npadding))]
    text-base;
  }
  100% {
    @apply top-[calc(var(--xspadding))]
    left-[calc(var(--npadding))]
    text-xs;
  }
}

@keyframes labelAnimationDown{
  0% {
    @apply top-[calc(var(--xspadding))]
    left-[calc(var(--npadding)-1px)]
    text-xs;
  }
  100% {
    @apply top-[calc(var(--npadding)-7px)]
    left-[calc(var(--npadding))]
    text-base;
  }
}


/* Text Area */
.text-area {
  @apply relative
  w-full
  h-40;
}

.text-area__label {
  @apply absolute
  top-2
  left-4
  z-10
  text-xs;
}

.text-area__area {
  @apply absolute
  top-0
  left-0
  w-full
  h-full
  py-8
  px-4
  border
  border-borderColor
  box-border
  rounded
  resize-none
  overflow-y-hidden;
}

.text-area__area:focus {
  @apply border-2
  border-mainBlue
  box-border
  rounded
  py-[calc(var(--dnpadding)-1px)]
  px-[calc(var(--npadding)-1px)];
 
}

.text-area__area::placeholder{
  @apply text-placeholderColor;
}

/* Select box */
.select-box {
  @apply relative
  text-left;
}

.select-box label {
  @apply absolute
  top-[var(--spadding)]
  left-[var(--npadding)]
  text-xs
  pointer-events-none;
}

select {
  @apply w-[200px]
  pt-[var(--bpadding)] 
  pr-[var(--xbpadding)]
  pb-[var(--spadding)]
  pl-[var(--npadding)]
  border
  border-borderColor
  box-border
  rounded
  appearance-none
  text-left
  bg-white;
  
}

.select-icon {
  @apply w-[var(--iconsizex)]
  h-[var(--iconsizey)]
  bg-cover 
  bg-white
  bg-no-repeat
  absolute
  right-[var(--npadding)]
  bottom-[var(--spadding)]
  ;
  background-image: url("./icons/arrow_down.svg");
  transition: transform var(--animation-duration);
}

select:active + .select-icon {
  transform: rotate(180deg);
  transition: transform var(--animation-duration);
}

select:focus {
  @apply border-2
  box-border
  border-mainBlue
  rounded
  pt-[calc(var(--bpadding)-1px)] 
  pr-[calc(var(--xbpadding)-1px)]
  pb-[calc(var(--spadding)-1px)]
  pl-[calc(var(--npadding)-1px)];
  background-position-x: calc(100% - (var(--npadding)));
  background-position-y: calc(var(--bpadding));
}

/* Checkbox */

.checkbox-all {
  @apply flex
  flex-row
  text-left
  ml-[var(--npadding)]
  p-[5px]
  relative;
}

input[type="checkbox"]:disabled + .checkbox-all__span {
  @apply border-2
  border-[#D1D5DA]
  box-border
  rounded;
}

.checkbox-all p {
  @apply ml-[2.2rem];
}

.checkbox-all input {
  @apply mt-[.33rem];    
}

.checkbox-all:hover .checkbox-all__span {
  @apply border-2
  border-mainBlue
  rounded
  box-border;
}

.checkbox-all:hover .checkbox-all__span::after {
  @apply top-[-2px]
  left-[-2px];
}

.checkbox-all__span {
  @apply absolute
  top-[0.3rem]
  left-[var(--spadding)]
  inline-block
  border
  border-black
  box-border
  rounded
  w-[var(--iconsizex)]
  h-[var(--iconsizey)];
}

input[type="checkbox"]{
  @apply w-0
  h-0
  opacity-0;
}

input[type="checkbox"]:checked + span:after {
  content: "";
  background-image: url('./icons/checked.svg');
  @apply bg-mainBlue
  bg-cover
  bg-no-repeat
  rounded
  absolute
  top-[-1px]
  left-[-1px]
  w-[var(--iconsizex)]
  h-[var(--iconsizey)];
}